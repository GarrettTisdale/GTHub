Base_Check = ['a', 'g', 'g']
list = ["g", "g", "u", "t", "c", "c", "u", "g", "g", "u", "t", "c", "g", "g", "g", "c", "g",
        "g", "g", 'a', 'g', 'g', 't', "t", "c", "c", "g", "g", "g", "u", "g", "g", "u", "t",
        "c", "g", "g", "u", "g", "g", "u", 'a', 'g', 'g', 't', "g", "u", "t", "c", "c", "g", "g",
        "g", "u",'a', 'g', 'g', 't', 'a', 'g', 'g', 't', "u", "t", "c", "c", "g", "g", "g", "u", "g", "g", "u", "t", "c",
        "c", "g"'a', 'g', 'g', 't']

list_temp = []

# Make list into solid string

for i in list:
    list_temp.append(i)

for i in range(0, len(Base_Check)):
    list_temp.append("X")


for i in range(0, len(list)):
    find_hold = 0

    for x in range(0, len(Base_Check)):
        if Base_Check[x] == list_temp[i+x]:
            find_hold = find_hold + 1

    Base_Compile = ''

    for x in Base_Check:
        Base_Compile = Base_Compile + x

    if find_hold == len(Base_Check):
        list_temp[i] = Base_Compile
        for x in range(1, len(Base_Check)):
            list_temp[i + x] = 'X'


d_Check_List = {}
d_Check_Sequence = {}
d_Check_Sequence_Count = {}

d_Check_Sequence["Sequence{0}".format(0)] = Base_Check

Base_Compile_0 = ''
for x in d_Check_Sequence["Sequence" + str(0)]:
    Base_Compile_0 = Base_Compile_0 + x
d_Check_Sequence_Count["Count{0}".format(0)] = list_temp.count(Base_Compile_0)

count_number = 1

sequence_mutaiton_number = 1

d_Check_List["Check{0}".format(0)] = Base_Check

list_of_sequences = ["Check" + str(0)]
list_of_temp_sequences = []
total_files_count = 1

print len(list_of_sequences)

for m in range(0, 6):
    for x in range(0, len(list_of_sequences)):
        z = []
        a = []
        g = []
        t = []
        c = []

        for i in range(0, len(d_Check_List[list_of_sequences[x]])):
            z.append(d_Check_List[list_of_sequences[x]][i])
            a.append(d_Check_List[list_of_sequences[x]][i])
            g.append(d_Check_List[list_of_sequences[x]][i])
            t.append(d_Check_List[list_of_sequences[x]][i])
            c.append(d_Check_List[list_of_sequences[x]][i])

            if i == len(d_Check_List[list_of_sequences[x]])-1:
                a.append("a")
                g.append("g")
                t.append("t")
                c.append("c")

        print a
        print g
        print t
        print c

        d_Check_List["Check{0}".format(total_files_count)] = a
        list_of_temp_sequences.append("Check" + str(total_files_count))
        total_files_count = total_files_count + 1

        d_Check_List["Check{0}".format(total_files_count)] = g
        list_of_temp_sequences.append("Check" + str(total_files_count))
        total_files_count = total_files_count + 1

        d_Check_List["Check{0}".format(total_files_count)] = t
        list_of_temp_sequences.append("Check" + str(total_files_count))
        total_files_count = total_files_count + 1

        d_Check_List["Check{0}".format(total_files_count)] = c
        list_of_temp_sequences.append("Check" + str(total_files_count))
        total_files_count = total_files_count + 1

    list_of_sequences = []
    print list_of_temp_sequences
    for i in list_of_temp_sequences:
        list_of_sequences.append(i)

    list_of_temp_sequences = []

print len(d_Check_List)

for i in range(1, len(d_Check_List)):
    list_temp = []

    for x in list:
        list_temp.append(x)

    d_Check_Sequence["Sequence{0}".format(i)] = d_Check_List["Check" + str(i)]


    for y in range(0, len(d_Check_Sequence["Sequence" + str(i)])):
        list_temp.append("X")

    for y in range(0, len(list)):
        find_hold = 0

        for z in range(0, len(d_Check_Sequence["Sequence" + str(i)])):
            if d_Check_Sequence["Sequence" + str(i)][z] == list_temp[y + z]:
                find_hold = find_hold + 1

        Base_Compile = ''

        for z in d_Check_Sequence["Sequence" + str(i)]:
            Base_Compile = Base_Compile + z

        if find_hold == len(d_Check_Sequence["Sequence" + str(i)]):
            list_temp[y] = Base_Compile
            for z in range(1, len(d_Check_Sequence["Sequence" + str(i)])):
                list_temp[y + z] = 'X'

        Compile_0 = ''
        for y in d_Check_Sequence["Sequence" + str(i)]:
            Compile_0 = Compile_0 + y

        d_Check_Sequence_Count["Count{0}".format(i)] = list_temp.count(Compile_0)

print d_Check_Sequence_Count["Count" + str(0)], d_Check_Sequence_Count["Count" + str(3)],d_Check_Sequence_Count["Count" + str(4)]
